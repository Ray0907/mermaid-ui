"use strict";var e=require("mermaid");async function t(t,r,n){n&&e.initialize(n);const i=r??`mermaid-${Date.now()}-${Math.random().toString(36).substr(2)}`;try{const{svg:r}=await e.render(i,t);return r}catch(e){return`<pre style="color:red">${e instanceof Error?e.message:String(e)}</pre>`}}async function r(e,r){const n=document.querySelectorAll(e);for(const e of Array.from(n)){const n=e.textContent||"",i=await t(n,void 0,r?.mermaidConfig);e.innerHTML=i}}exports.initMermaidUI=function(n){var i,o;n.mermaidConfig&&e.initialize(n.mermaidConfig),r(n.selector,{mermaidConfig:n.mermaidConfig}),n.observer&&(i=n.selector,o=n.mermaidConfig,new MutationObserver((e=>{for(const r of e)"childList"===r.type&&r.addedNodes.forEach((async e=>{if(e instanceof HTMLElement){if(e.matches(i)){const r=e.textContent||"",n=await t(r,void 0,o);e.innerHTML=n}e.querySelectorAll(i).forEach((async e=>{const r=e.textContent||"",n=await t(r,void 0,o);e.innerHTML=n}))}}))})).observe(document.body,{childList:!0,subtree:!0}))},exports.renderAll=r;
//# sourceMappingURL=core.cjs.js.map
